spring.h2.console.enabled = true

# Generated SQL statements will be logged.
# This is a good starting point that won't overwhelm your logs with information.
spring.jpa.show-sql = true

# This has the same outcome as the property shown above.
logging.level.org.hibernate.SQL = DEBUG

# This property will log the values being bound to SQL prepared statements
# without dumping out an overwhelming amount of information.
logging.level.org.hibernate.type.descriptor.sql.BasicBinder = TRACE

# This property will reveal even more information about bindings and values.
# Expect a large amount of logging in your console.
logging.level.org.hibernate.type = TRACE



# Problem 1: Use XML format
#
# Spring uses a YML changeLog format by default, but we can choose between YML, XML, and JSON. Let's use XML for
# this class.
#
# In application.properties add the following:
#
#     spring.liquibase.change-log = classpath:/db/changelog/db.changelog-master.xml
#
# This will allow us to use XML format.

spring.liquibase.change-log = classpath:/db/changelog/db.changelog-master.xml